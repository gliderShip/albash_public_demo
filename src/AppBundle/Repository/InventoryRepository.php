<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Car;
use AppBundle\Entity\Inventory;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Collections\Collection;
use Doctrine\Common\Persistence\ManagerRegistry;

/**
 * InventoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InventoryRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Inventory::class);
    }

    /**
     * @return Inventory[]
     */
    public function getEnabled()
    {

        $qb = $this->createQueryBuilder('s')
            ->join('s.car', 'car')
            ->where('s.enabled = true');

        $result = $qb->getQuery()->getResult();
        return $result;
    }

    /**
     * @return Inventory[]
     */
    public function getItemsStock(array $cars)
    {
        $qb = $this->createQueryBuilder('s')
            ->join('s.car', 'car')
            ->where('s.car in  (:cars)')
            ->setParameter('cars', $cars);

        $result = $qb->getQuery()->getResult();
        return $result;
    }

    /**
     * @param string $carId
     * @return Inventory|null
     */
    public function getStock(string $carId)
    {

        $qb = $this->createQueryBuilder('s')
            ->where('s.car = :carId')
            ->setParameter('carId', $carId);

        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;
    }

    /**
     * @param string $carId
     * @return Inventory|null
     */
    public function getAvailableStock(string $carId)
    {
        $qb = $this->createQueryBuilder('s')
            ->where('s.car = :carId')
            ->andWhere('s.enabled = true')
            ->setParameter('carId', $carId);

        $result = $qb->getQuery()->getOneOrNullResult();
        return $result;
    }
}
