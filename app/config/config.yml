imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app_locales: en|sq
    app.notifications.email_sender: "%mailer_user%"

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
#        handler_id:  ~
        cookie_secure: false
        cookie_httponly: false
    fragments:       ~
    http_method_override: true
    assets: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address:     "%mailer_user%"
        sender_name:    "%website_title%"
    registration:
        confirmation:
            enabled:    false
            template:   FOSUserBundle:Registration:email.txt.twig


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - "bootstrap_3_layout.html.twig"
        - "form/fields.html.twig"
        - "SonataCoreBundle:Form:datepicker.html.twig"
    globals:
        contact:
            email:          "%mailer_user%"
            phone:          "%contact_phone%"
        website_title:  "%website_title%"
        cart_expiration:  "%cart_expiration%"

# Assetic Configuration (used for managing web assets: CSS, JavaScript, Sass, etc.)
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    filters:
        cssrewrite: ~
        jsqueeze: ~
        scssphp:
            # the formatter must be the FQCN (don't use the 'compressed' value)
            formatter: "Leafo\\ScssPhp\\Formatter\\Compressed"


# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    #    transport: gmail
    auth_mode:  login # transport: gmail
    encryption: ssl # transport: gmail
    host:       "%mailer_host%" # transport: gmail
    username:  "%mailer_user%"
    password:  "%mailer_password%"
#    spool:     { type: memory }

# KnpPaginatorBundle configuration (used to paginate large result set)
knp_paginator:
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig

knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: knp_menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: false
    # the renderer to use, list is also available by default
    default_renderer: twig

mopa_bootstrap:
    # To load the navbar extensions (template helper, CompilerPass, etc.)
    navbar: ~
    form: ~  # Adds twig form theme  support
    menu: ~  # enables twig helpers for menu

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.search_result:
            contexts: [admin]
        sonata.block.service.rss:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

sonata_core: ~

sonata_admin:
    title:  "%website_title%"
    title_logo: img/car-logo.png
    show_mosaic_button:   false

    templates:
        outer_list_rows_list: AppBundle:Admin:override_list_outer_rows_list.html.twig
        list:                 AppBundle:Admin:override_list.html.twig
        layout:               AppBundle:Admin:override_standart_layout.html.twig
        user_block:           AppBundle:Admin:override_user_block.html.twig
        edit:                   AppBundle:Admin:override_edit.html.twig

    options:
        html5_validate: true

    security:
        handler: sonata.admin.security.handler.role

    dashboard:
        groups:
            Warehouse:
                keep_open:            false
                icon:                 '<i class="fa fa-building"></i>'
            Orders:
                keep_open:            false
                icon:                 '<i class="fa fa-shopping-cart"></i>'
            Users:
                keep_open:            true
                icon:                 '<i class="fa fa-users"></i>'
        blocks:
            -   position: left
                type: sonata.admin.block.admin_list
                roles: [ROLE_SONATA_GUEST]
            -   position: right
                type: sonata.block.service.rss
                roles: [ROLE_SONATA_GUEST]
                settings:
                    title: Tirana Weather Feed
                    url: http://www.rssweather.com/wx/al/tirana/rss.php
            -   position: right
                type: sonata.block.service.text
                roles: [ROLE_SONATA_GUEST]
                settings:
                    content:
#                        <h2>Welcome to the Sonata Admin</h2>
#                        <p>This is a <code>sonata.block.service.text</code> from the Block
#                        Bundle, you can create and add new block in these area by configuring
#                        the <code>sonata_admin</code> section.</p> <br />.

fos_elastica:
    clients:
        default:
            host: "%ELASTICSEARCH_HOST%"
            port: "%ELASTICSEARCH_PORT%"
            #            username: 'username'
            #            password: 'password'
            #            headers:
            #                Authorization: "Basic jdumrGK7rY9TMuQOPng7GZycmxyMHNoir=="
            logger: true
    indexes:
        inventory:
            use_alias: true
            index_name: inventory_prod
            types:
                stock:
                    indexable_callback: 'isEnabled'
                    properties:
                        quantity: ~
                        unitPrice: ~
                        #                        car: ~
                        car:
                            type: "object"
                            properties:
                                id: ~
                                name: ~
                                model: ~
                                registration: ~
                                engineSize: ~
                                tags: ~
                        enabled: ~
                        updatedAt: ~
                    #                        username:
                    #                            property_path: indexableUsername
                    #                        firstName:
                    #                            property_path: names[first]
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Inventory
                        provider: ~
                        finder: ~
                        #                        repository: AppBundle\Repository\InventoryRepository
                        listener:  # by default, listens to "insert", "update" and "delete"
                            logger: true
                #                        elastica_to_model_transformer:
                #                            ignore_missing: true
